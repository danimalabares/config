global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

def tx():
      return vim.eval('vimtex#syntax#in_mathzone()') == '0'
endglobal

context "math()" 
snippet rH "cohomology" i
\tilde{H}^{$1}($2,$3)$4
endsnippet

context "math()"
snippet HH "cohomology2" iA
H^{$1}($2)$0
endsnippet

context "math()"
snippet hh "homology2" iA
H_{$1}($2)$0
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[${1:${VISUAL}}\]$0
endsnippet

context "math()"
snippet mc "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet mf "mathfrak" iA
\mathfrak{$1}$0
endsnippet

context "math()"
snippet tx "text" iA
\text{$1} $0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction"
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
snippet to "to" iA
\to 
endsnippet

context "math()"
snippet xn "nth variable" iA
x_n
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto superscript" wrA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`$1}$0
endsnippet

snippet '([A-Za-z])^(\d\d)' "auto superscript2" wrA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`}
endsnippet

snippet '}^(\d\d)' "auto superscript3" wrA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet Sn "sphere" iA
S^{n$1}$0
endsnippet

context "math()"
snippet @ "superscript" iA
^{${1}}`!p
if t[2] and t[2][0] not in [',','(', '.', '_', '?', '-', ' ']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet -- "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ker "kernel" iA
\ker 
endsnippet

context "math()"
snippet cok "coker" iA
\operatorname{coker}
endsnippet

context "math()"
snippet img "image" iA
\img 
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet Ï€ "pi" iA
\pi
endsnippet

context "math()"
snippet (( "parenthesis" iA
($1)$0
endsnippet

context "math()"
snippet [[ "sq parenthesis" iA
[$1]$0
endsnippet

context "math()"
snippet os "oplus" iA
\oplus 
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet mat "pmat" wA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet smat "square matrix" iA
\begin{pmatrix}$1&$2\\$3&$4\end{pmatrix}$0
endsnippet


context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<$1\right>`!p
if t[1] not in [',', '.', '_', '?', '-', ' ','(','^']:
     snip.rv = ' '
else:
     snip.rv = ''
`$0
endsnippet

context "math()"
snippet sum "sum" iA
\sum_{$1}$2
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" i
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet
context "math()"
snippet prod "product" iA
\prod_{$1} ${2:${VISUAL}} $0
endsnippet

context "math()"
snippet bigo "direct sum" iA
\bigoplus_{${1:n=${2:1}}} ${2:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet td "to the ... power" iA
^{($1)}$0
endsnippet

priority 1
context "math()"
snippet \op "opposite cat" iA
\opertatorame{op}
endsnippet


context "math()"
snippet op "operator" iA
\operatorname{$1}$0
endsnippet

snippet fun
$${1}:${2}\to ${3}$`!p
if t[4] and t[4][1] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$4
endsnippet

snippet Fun
\[$1:$2\to $3\]
$0
endsnippet

context "math()"
snippet fun "function" iA
$1:$2\to $3 
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet oo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nab "abla" iA
\nabla`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(','^']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
snippet aa "cdot" iA
\cdot 
endsnippet

context "math()"
snippet no "norm" iA
\|$1\|$0
endsnippet

priority 300
context "math()"
snippet int "integral" wA
\int_{$1}$0
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus 
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet see "set" wA
\\{$1\\} $0
endsnippet

snippet || "mid" iA
\mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet zz "supset" iA
\supset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet nii "ni" iA
\ni 
endsnippet

context "math()"
snippet nin "not in" iA
\notin 
endsnippet

context "math()"
snippet nq "neq" iA
\neq 
endsnippet
context "math()"
snippet ww "cap" iA
\cap 
endsnippet

context "math()"
snippet uu "cup" iA
\cup 
endsnippet

context "math()"
snippet UU "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet WW "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\varnothing 
endsnippet

context "math()"
snippet mb "mathbb" iA
\mathbb{$1}$0
endsnippet

context "math()"
snippet bf "mathbf" iA
\mathbf{$1}$0
endsnippet

context "math()"
snippet CC "complex" iA
\mathbb{C}
endsnippet

context "math()"
snippet CP "complex projective space" iA
\mathbb{C}P^{$1}$0
endsnippet

context "math"
snippet Cn "complex" iA
\mathbb{C}^{$1}
endsnippet

context "math"
snippet Rn "reals" iA
\mathbb{R}^{$1}
endsnippet

context "math()"
snippet Ss "sphere" iA
\Sigma`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet SS "SS" iA
\mathbb{S}`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet KK "what is this one?" iA
\mathbb{K}^{$1}_{$2}
endsnippet

context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet RP "projective space" iA
\mathbb{R}P^{$1}$0
endsnippet

snippet RR "reals" iA
$\mathbb{R}$
endsnippet

snippet Rn "Rn" iA
$\mathbb{R}^{$1}$$0
endsnippet

context "math()"
snippet QQ "Q" iA
\mathbb{Q}
endsnippet

context "math()"
snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet ZZ "Z" iA
$\mathbb{Z}$
endsnippet

context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet NN "n" iA
\mathbb{N}
endsnippet

context "math()"
snippet PP "p" iA
\mathbb{P}
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

snippet fun
$$1:$2\to $3$ $4
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $5
\end{align*}
$0
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet br "bar" iA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])br" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" iA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" iA
endsnippet

context "math()"
snippet imp "implies" iA
\implies 
endsnippet

context "math()"
snippet impd "implied by" iA
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet // "Fraction" 
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet fra "Fraction" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet df "dfrac" i
\dfrac{${1:num}}{${2:den}}$0
endsnippet

#snippet == "equals" iA
#&= $1 \\\\
#endsnippet

context "math()"
snippet ... "ldots" iA
\ldots
endsnippet

context "math()"
snippet cases "cases" iA
\begin{cases}
	$1\qquad &$2 \\
	$3\qquad &$4
\end{cases}
endsnippet

context "math()"
snippet fund "fundamental group" iA
\pi_1(X,x_0)
endsnippet

context "tx()"
snippet pin "pi_n" iA
$\pi_{$1}($2}$`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet cong "cong" iA
\cong 
endsnippet

context "math()"
snippet til "tilde" iA
\tilde{$1}$0
endsnippet

context "math()"
snippet Til "tilde" iA
\widetilde{$1}$0
endsnippet

context "math()"
snippet hk "hookrightarrow" iA
\hookrightarrow 
endsnippet

context "math()"
snippet qd "quad" iA
\quad 
endsnippet

context "math()"
snippet Qd "quad" iA
\qquad 
endsnippet

context "math()"
snippet lq "geq" iA
\leq 
endsnippet

context "math()"
snippet gq "geq" iA
\geq 
endsnippet

context "math()"
snippet bul "bullet" iA
\bullet
endsnippet

context "math()"
snippet par "partial" iA
\partial
endsnippet

context "math()"
snippet hat "hat" iA
\hat{$1}$0
endsnippet

context "math()"
snippet circ "circ" iA
\circ 
endsnippet

priority 10000
context "math()"
snippet dbar "dbar" iA
\bar\partial
endsnippet
priority 10
context "math()"
snippet csep "column sep" iA
column sep=$1
endsnippet

context "math()"
snippet col "color"
{\color{$1}$2}$0
endsnippet

snippet fib "fibration" i
$$1\hookrightarrow $2\to $3$$0
endsnippet

snippet Fib "fibration" i
\[$1\hookrightarrow $2\to $3\]
$0
endsnippet

snippet rH "reduced homology" iA
\widetilde{H}_{$1}($2)$0
endsnippet

context "math()"
snippet ot "otimes" iA
\otimes 
endsnippet

context "math()"
snippet vv "vee" iA
\vee 
endsnippet

snippet sc "sections" i
\Gamma($1,$2)$0
endsnippet

context "math()"
snippet subst "substacks" iA
\substack{$1 \\\ $2}$0
endsnippet

context "math()"
snippet ovs "overset" iA
\overset{${1:up}}{${2:down}}$0
endsnippet

context "math()"
snippet cv "curvearrowright" iA
\curvearrowright 
endsnippet

context "math()"
snippet dim "dimension" iA
\dim 
endsnippet

context "math()"
snippet sm "smile!" iA
\smile 
endsnippet

context "math()"
snippet Â£ "cdot" iA
\cdot 
endsnippet

context "math()"
snippet sg "squigarrow" iA
\rightsquigarrow 
endsnippet

snippet MM "manifold" iA
$M$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
     snip.rv = ' '
else:   
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet wed "wedge" iA
\wedge 
endsnippet


context "math()"
snippet vwg "varowedge" iA
\varowedge 
endsnippet

context "math()"
snippet Gr "grassmannian" iA
\operatorname{Gr}
endsnippet

context "math()"
snippet mt "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet abs "abs" iA
|${1}|`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ','^']:
     snip.rv = ' '
else:   
    snip.rv = ''
`$2
endsnippet

context "math()"
snippet vd "vdits" iA
\vdots 
endsnippet

context "math()"
snippet K3 "K" iA
K(\mathbb{Z},3)
endsnippet

context "math()"
snippet K2 "K" iA
K(\mathbb{Z},2)
endsnippet

context "math()"
snippet ast "asterisk" iA
*
endsnippet

context "math()"
snippet bk "backslash" iA
\backslash 
endsnippet

context "math()"
snippet S2 "sphere even" iA
S^{2$1}$0
endsnippet

context "math()"
snippet sim "simeq" iA
\simeq 
endsnippet

context "math()"
snippet qq "^-1" iA
^{-1}$0
endsnippet

context "math()"
snippet hofib "hofib" iA
\hofib 
endsnippet

context "math()"
snippet det "det" iA
\det 
endsnippet

context "math()"
snippet prp "perp" iA
\perp 
endsnippet

context "math()"
snippet vep "varepsilon" iA
\varepsilon 
endsnippet

context "math()"
snippet vp "varphi" iA
\varphi`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet


context "math()"
snippet pm "pm" iA
\pm 
endsnippet

context "math()"
snippet cs "cosine" iA
\cos 
endsnippet

context "math()"
snippet sn "sine" iA
\sin 
endsnippet


context "math()"
snippet hc "hyperbolic cosine" ia
\opertatorame{cosh} 
endsnippet

context "math()"
snippet hs "hyperbolic sine" ia
\opertatorame{sinh} 
endsnippet

context "math()"
snippet Â§ "el 11 no aparece mucho" iA
^{-1}`!p
if t[2] and t[2][0] not in ['(',',', '.', '_', '?', '-', ' ']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet GL "gl" iA
\opertatorame{GL}
endsnippet

context "math()"
snippet id "identity" iA
\opertatorame{id}
endsnippet

context "math()"
snippet sp "span" iA
\opertatorame{span}`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet sta "star" iA
^{*}`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet hb "hbar" iA
\hbar`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet \g "lie algebra" iA
\mathfrak{g}
endsnippet

context "math()"
snippet Nab "nabla" iA
\nabla_{$1}$2`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(',')']:
     snip.rv = ' '
else:
     snip.rv = ''
`
endsnippet

context "math()"
snippet hes "Description" iA
\nabla^{2}$1
endsnippet

context "math()"
snippet Br "bbracket" iA
\llbracket $1\rrbracket
endsnippet

context "math()"
snippet llr "longleftrightarrow" iA
\longleftrightarrow
endsnippet

context "math()"
snippet R2 "R2" iA
\mathbb{R}^2`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet R3 "R3" iA
\mathbb{R}^3`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

snippet poo "po" iA
$p_{0}$`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet lap "laplacian" iA
\Delta`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(','^']:
     snip.rv = ' '
else:
     snip.rv = ''
`$1
endsnippet

context "math()"
snippet oc "Ocal" iA
\mathcal{O}($1)`!p
if t[1] and t[1][0] not in [',', '.', '_', '?', '-', ' ','(','^']:
     snip.rv = ' '
else:
     snip.rv = ''
`$3
endsnippet

context "math()"
snippet qde "qdet" iA
\opertatorame{qdet}
endsnippet
context "math()"
snippet iso "iso" iA
\opertatorame{Iso}(\mathbb{H}^2)
endsnippet

context "math()"
snippet Hh "hyperbolic" iA
\mathbb{H}^{$1}
endsnippet

context "math()"
snippet def "Deformation" iA
\opertatorame{Def}^{a}_{X}
endsnippet

snippet tex "texorpdfstring" iA
\texorpdfstring{$1}{$2}$0
endsnippet

