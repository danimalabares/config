global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

context "math()" 
snippet J "cohomology" i
H^{$1}($2,$3)$4
endsnippet

context "math()"
snippet H "cohomology2" i
H^{$1}($2)$0
endsnippet

context "math()"
snippet h "homology2" i
H_{$1}($2)$0
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[${1:${VISUAL}}\]$0
endsnippet

context "math()"
snippet mc "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet mf "mathfrak" iA
\mathfrak{$1}$0
endsnippet

context "math()"
snippet tx "text" iA
\text{$1} $0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction"
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
snippet to "to" iA
\to 
endsnippet


snippet xn "nth variable" iA
x_n
endsnippet

context "math()"
snippet nn "nth power" iA
^n 
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet @ "superscript" iA
^{${1}}`!p
if t[2] and t[2][0] not in [',', '.', '_', '?', '-', ' ']:
     snip.rv = ' '
else:
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet -- "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ker "kernel" iA
\ker 
endsnippet

context "math()"
snippet cok "coker" iA
\operatorname{coker}
endsnippet

context "math()"
snippet img "image" iA
\img 
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet Ï€ "pi" iA
\pi
endsnippet

context "math()"
snippet ( "parenthesis" iA
($1)$0
endsnippet

context "math()"
snippet [ "sq parenthesis" iA
[$1]$0
endsnippet

context "math()"
snippet os "oplus" iA
\oplus 
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet sum "sum" iA
\sum_{$1}$2
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet
context "math()"
snippet prod "product" iA
\prod_{${1:n=${2:1}}}${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet bigo "direct sum" iA
\bigoplus_{${1:n=${2:1}}} ${2:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet td "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet op "operator" iA
\operatorname{$1}$0
endsnippet

snippet fun
$${1}:${2}\to ${3}$`!p
if t[4] and t[4][1] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$4
endsnippet

snippet Fun
\[$1:$2\to $3\]
$0
endsnippet

context "math()"
snippet fun "function" iA
$1:$2\to $3 
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet oo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet aa "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet


context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet zz "supset" iA
\supset 
endsnippet


snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet nii "ni" iA
\ni 
endsnippet

context "math()"
snippet nin "not in" iA
\notin 
endsnippet

context "math()"
snippet nq "neq" iA
\neq 
endsnippet
context "math()"
snippet ww "cap" iA
\cap 
endsnippet

context "math()"
snippet uu "cup" iA
\cup 
endsnippet

context "math()"
snippet UU "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet WW "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\varnothing 
endsnippet

snippet Cn
\C^{$1}
endsnippet

context "math()"
snippet mb "mathbb" iA
\mathbb{$1}$0
endsnippet

context "math()"
snippet CC "complex" iA
\mathbb{C}
endsnippet

context "math()"
snippet CP "complex projective space" iA
\mathbb{C}P^{$1}$0
endsnippet

context "math"
snippet Rn
\mathbb{R}^{$1}
endsnippet

context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet RP "projective space" iA
\mathbb{R}P^{$1}$0
endsnippet

snippet RR "reals" iA
$\mathbb{R}$
endsnippet

snippet Rn "Rn" iA
$\mathbb{R}^{$1}$$0
endsnippet

context "math()"
snippet Rn "Rn" iA
\mathbb{R}^{$1}$0
endsnippet

context "math()"
snippet QQ "Q" iA
\mathbb{Q}
endsnippet

context "math()"
snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet ZZ "Z" iA
$\mathbb{Z}$
endsnippet

context "math()"
snippet HH "H" iA
\mathbb{H}
endsnippet

context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet NN "n" iA
\mathbb{N}
endsnippet

context "math()"
snippet PP "p" iA
\mathbb{P}
endsnippet

snippet XX "X" iA
$X$
endsnippet

snippet AA "A" iA
$A$
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

snippet fun
$$1:$2\to $3$ $4
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet bar "bar" iA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" iA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" iA
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

snippet dcl
\DeclareMathOperator{$1}{$2}
endsnippet

snippet imp "implies" iA
\implies 
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet // "Fraction" 
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet / "Fraction" i
\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet df "dfrac" i
\dfrac{${1:num}}{${2:den}}$0
endsnippet


snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet ... "ldots" iA
\ldots
endsnippet

context "math()"
snippet cases "cases" iA
\begin{cases}
	$1\qquad &$2\\
	$3\qquad &$4
\end{cases}
endsnippet

context "math()"
snippet fund "fundamental group" iA
\pi_1(X,x_0)
endsnippet

context "math()"
snippet pin "pi_n" iA
\pi_{$1}($2)$0
endsnippet

context "math()"
snippet cong "cong" iA
\cong 
endsnippet

context "math()"
snippet til "tilde" iA
\widetilde{$1}$0
endsnippet

context "math()"
snippet hk "hookrightarrow" iA
\hookrightarrow 
endsnippet

context "math()"
snippet qd "quad" iA
\quad 
endsnippet

context "math()"
snippet Qd "quad" iA
\qquad 
endsnippet

context "math()"
snippet geq "geq" iA
\geq 
endsnippet

context "math()"
snippet bul "bullet" iA
\bullet
endsnippet

context "math()"
snippet par "partial" iA
\partial
endsnippet

context "math()"
snippet hat "hat" iA
\hat{$1}$0
endsnippet

context "math()"
snippet circ "circ" iA
\circ 
endsnippet

priority 10000
context "math()"
snippet dbar "dbar" iA
\bar\partial
endsnippet
priority 10
context "math()"
snippet csep "column sep" iA
column sep=$1
endsnippet

context "math()"
snippet col "color"
{\color{$1}$2}$0
endsnippet

context "math()"
snippet K "eilenberg-mclane" i
K($1,$2)$0
endsnippet

context "math()"
snippet L "lens space" i
L($1,$2)$0
endsnippet

snippet fib "fibration" i
$$1\hookrightarrow $2\to $3$$0
endsnippet

snippet Fib "fibration" i
\[$1\hookrightarrow $2\to $3\]
$0
endsnippet

snippet rH "reduced homology" iA
\widetilde{H}_{$1}($2)$0
endsnippet

context "math()"
snippet ot "otimes" iA
\otimes 
endsnippet

context "math()"
snippet vv "vee" iA
\vee 
endsnippet

snippet sc "sections" i
\Gamma($1,$2)$0
endsnippet

context "math()"
snippet stk "substacks" i
\substack{$1 \\ $2}$0
endsnippet

context "math()"
snippet ovs "overset" iA
\overset{${1:up}}{${2:down}}$0
endsnippet

context "math()"
snippet cv "curvearrowright" iA
\curvearrowright 
endsnippet

context "math()"
snippet dim "dimension" iA
\dim 
endsnippet

context "math()"
snippet sm "smile!" iA
\smile 
endsnippet

context "math()"
snippet Â£ "cdot" iA
\cdot 
endsnippet

context "math()"
snippet sg "squigarrow" iA
\rightsquigarrow 
endsnippet

snippet MM "manifold" iA
$M$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
     snip.rv = ' '
else:   
     snip.rv = ''
`$2
endsnippet

context "math()"
snippet wed "wedge" iA
\wedge 
endsnippet


context "math()"
snippet vwg "varowedge" iA
\varowedge 
endsnippet

context "math()"
snippet Gr "grassmannian" iA
\operatorname{Gr}
endsnippet

context "math()"
snippet mt "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet abs "abs" iA
|${1}|`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
     snip.rv = ' '
else:   
    snip.rv = ''
`$2
endsnippet

context "math()"
snippet vd "vdits" iA
\vdots 
endsnippet

context "math()"
snippet K3 "K" iA
K(\mathbb{Z},3)
endsnippet

context "math()"
snippet K2 "K" iA
K(\mathbb{Z},2)
endsnippet

context "math()"
snippet as "asterisk" iA
*
endsnippet

